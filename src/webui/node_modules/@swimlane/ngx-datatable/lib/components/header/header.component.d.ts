import { EventEmitter, ChangeDetectorRef } from '@angular/core';
import { SortType } from '../../types/sort.type';
import { SelectionType } from '../../types/selection.type';
import { DataTableColumnDirective } from '../columns/column.directive';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableHeaderComponent {
    private cd;
    sortAscendingIcon: any;
    sortDescendingIcon: any;
    scrollbarH: boolean;
    dealsWithGroup: boolean;
    targetMarkerTemplate: any;
    targetMarkerContext: any;
    innerWidth: number;
    sorts: any[];
    sortType: SortType;
    allRowsSelected: boolean;
    selectionType: SelectionType;
    reorderable: boolean;
    dragEventTarget: any;
    headerHeight: any;
    columns: any[];
    offsetX: number;
    sort: EventEmitter<any>;
    reorder: EventEmitter<any>;
    resize: EventEmitter<any>;
    select: EventEmitter<any>;
    columnContextmenu: EventEmitter<{
        event: MouseEvent;
        column: any;
    }>;
    _columnsByPin: any;
    _columnGroupWidths: any;
    _innerWidth: number;
    _offsetX: number;
    _columns: any[];
    _headerHeight: string;
    _styleByGroup: {
        [prop: string]: {};
    };
    constructor(cd: ChangeDetectorRef);
    onLongPressStart({ event, model }: {
        event: any;
        model: any;
    }): void;
    onLongPressEnd({ event, model }: {
        event: any;
        model: any;
    }): void;
    readonly headerWidth: string;
    trackByGroups(index: number, colGroup: any): any;
    columnTrackingFn(index: number, column: any): any;
    onColumnResized(width: number, column: DataTableColumnDirective): void;
    onColumnReordered({ prevIndex, newIndex, model }: any): void;
    onTargetChanged({ prevIndex, newIndex, initialIndex }: any): void;
    getColumn(index: number): any;
    onSort({ column, prevValue, newValue }: any): void;
    calcNewSorts(column: any, prevValue: number, newValue: number): any[];
    setStylesByGroup(): void;
    calcStylesByGroup(group: string): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableHeaderComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataTableHeaderComponent, "datatable-header", never, { "innerWidth": "innerWidth"; "headerHeight": "headerHeight"; "columns": "columns"; "offsetX": "offsetX"; "sorts": "sorts"; "sortAscendingIcon": "sortAscendingIcon"; "sortDescendingIcon": "sortDescendingIcon"; "scrollbarH": "scrollbarH"; "dealsWithGroup": "dealsWithGroup"; "targetMarkerTemplate": "targetMarkerTemplate"; "sortType": "sortType"; "allRowsSelected": "allRowsSelected"; "selectionType": "selectionType"; "reorderable": "reorderable"; }, { "sort": "sort"; "reorder": "reorder"; "resize": "resize"; "select": "select"; "columnContextmenu": "columnContextmenu"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJoZWFkZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU29ydFR5cGUgfSBmcm9tICcuLi8uLi90eXBlcy9zb3J0LnR5cGUnO1xuaW1wb3J0IHsgU2VsZWN0aW9uVHlwZSB9IGZyb20gJy4uLy4uL3R5cGVzL3NlbGVjdGlvbi50eXBlJztcbmltcG9ydCB7IERhdGFUYWJsZUNvbHVtbkRpcmVjdGl2ZSB9IGZyb20gJy4uL2NvbHVtbnMvY29sdW1uLmRpcmVjdGl2ZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRhVGFibGVIZWFkZXJDb21wb25lbnQge1xuICAgIHByaXZhdGUgY2Q7XG4gICAgc29ydEFzY2VuZGluZ0ljb246IGFueTtcbiAgICBzb3J0RGVzY2VuZGluZ0ljb246IGFueTtcbiAgICBzY3JvbGxiYXJIOiBib29sZWFuO1xuICAgIGRlYWxzV2l0aEdyb3VwOiBib29sZWFuO1xuICAgIHRhcmdldE1hcmtlclRlbXBsYXRlOiBhbnk7XG4gICAgdGFyZ2V0TWFya2VyQ29udGV4dDogYW55O1xuICAgIGlubmVyV2lkdGg6IG51bWJlcjtcbiAgICBzb3J0czogYW55W107XG4gICAgc29ydFR5cGU6IFNvcnRUeXBlO1xuICAgIGFsbFJvd3NTZWxlY3RlZDogYm9vbGVhbjtcbiAgICBzZWxlY3Rpb25UeXBlOiBTZWxlY3Rpb25UeXBlO1xuICAgIHJlb3JkZXJhYmxlOiBib29sZWFuO1xuICAgIGRyYWdFdmVudFRhcmdldDogYW55O1xuICAgIGhlYWRlckhlaWdodDogYW55O1xuICAgIGNvbHVtbnM6IGFueVtdO1xuICAgIG9mZnNldFg6IG51bWJlcjtcbiAgICBzb3J0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICByZW9yZGVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICByZXNpemU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHNlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY29sdW1uQ29udGV4dG1lbnU6IEV2ZW50RW1pdHRlcjx7XG4gICAgICAgIGV2ZW50OiBNb3VzZUV2ZW50O1xuICAgICAgICBjb2x1bW46IGFueTtcbiAgICB9PjtcbiAgICBfY29sdW1uc0J5UGluOiBhbnk7XG4gICAgX2NvbHVtbkdyb3VwV2lkdGhzOiBhbnk7XG4gICAgX2lubmVyV2lkdGg6IG51bWJlcjtcbiAgICBfb2Zmc2V0WDogbnVtYmVyO1xuICAgIF9jb2x1bW5zOiBhbnlbXTtcbiAgICBfaGVhZGVySGVpZ2h0OiBzdHJpbmc7XG4gICAgX3N0eWxlQnlHcm91cDoge1xuICAgICAgICBbcHJvcDogc3RyaW5nXToge307XG4gICAgfTtcbiAgICBjb25zdHJ1Y3RvcihjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG9uTG9uZ1ByZXNzU3RhcnQoeyBldmVudCwgbW9kZWwgfToge1xuICAgICAgICBldmVudDogYW55O1xuICAgICAgICBtb2RlbDogYW55O1xuICAgIH0pOiB2b2lkO1xuICAgIG9uTG9uZ1ByZXNzRW5kKHsgZXZlbnQsIG1vZGVsIH06IHtcbiAgICAgICAgZXZlbnQ6IGFueTtcbiAgICAgICAgbW9kZWw6IGFueTtcbiAgICB9KTogdm9pZDtcbiAgICByZWFkb25seSBoZWFkZXJXaWR0aDogc3RyaW5nO1xuICAgIHRyYWNrQnlHcm91cHMoaW5kZXg6IG51bWJlciwgY29sR3JvdXA6IGFueSk6IGFueTtcbiAgICBjb2x1bW5UcmFja2luZ0ZuKGluZGV4OiBudW1iZXIsIGNvbHVtbjogYW55KTogYW55O1xuICAgIG9uQ29sdW1uUmVzaXplZCh3aWR0aDogbnVtYmVyLCBjb2x1bW46IERhdGFUYWJsZUNvbHVtbkRpcmVjdGl2ZSk6IHZvaWQ7XG4gICAgb25Db2x1bW5SZW9yZGVyZWQoeyBwcmV2SW5kZXgsIG5ld0luZGV4LCBtb2RlbCB9OiBhbnkpOiB2b2lkO1xuICAgIG9uVGFyZ2V0Q2hhbmdlZCh7IHByZXZJbmRleCwgbmV3SW5kZXgsIGluaXRpYWxJbmRleCB9OiBhbnkpOiB2b2lkO1xuICAgIGdldENvbHVtbihpbmRleDogbnVtYmVyKTogYW55O1xuICAgIG9uU29ydCh7IGNvbHVtbiwgcHJldlZhbHVlLCBuZXdWYWx1ZSB9OiBhbnkpOiB2b2lkO1xuICAgIGNhbGNOZXdTb3J0cyhjb2x1bW46IGFueSwgcHJldlZhbHVlOiBudW1iZXIsIG5ld1ZhbHVlOiBudW1iZXIpOiBhbnlbXTtcbiAgICBzZXRTdHlsZXNCeUdyb3VwKCk6IHZvaWQ7XG4gICAgY2FsY1N0eWxlc0J5R3JvdXAoZ3JvdXA6IHN0cmluZyk6IGFueTtcbn1cbiJdfQ==