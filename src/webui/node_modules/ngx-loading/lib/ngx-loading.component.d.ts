import { ChangeDetectorRef, OnInit, TemplateRef } from '@angular/core';
import { INgxLoadingConfig } from './ngx-loading-config';
import { NgxLoadingService } from './ngx-loading.service';
import * as ɵngcc0 from '@angular/core';
export declare class NgxLoadingComponent implements OnInit {
    private LoadingService;
    private changeDetectorRef;
    show: boolean;
    config: INgxLoadingConfig;
    template: TemplateRef<any>;
    private defaultConfig;
    ngxLoadingAnimationTypes: {
        chasingDots: string;
        circle: string;
        circleSwish: string;
        cubeGrid: string;
        doubleBounce: string;
        none: string;
        pulse: string;
        rectangleBounce: string;
        rotatingPlane: string;
        threeBounce: string;
        wanderingCubes: string;
    };
    constructor(LoadingService: NgxLoadingService, changeDetectorRef: ChangeDetectorRef);
    ngOnInit(): void;
    private setupConfig;
    setShow(show: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxLoadingComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxLoadingComponent, "ngx-loading", never, { "config": "config"; "show": "show"; "template": "template"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWxvYWRpbmcuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm5neC1sb2FkaW5nLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIE9uSW5pdCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSU5neExvYWRpbmdDb25maWcgfSBmcm9tICcuL25neC1sb2FkaW5nLWNvbmZpZyc7XHJcbmltcG9ydCB7IE5neExvYWRpbmdTZXJ2aWNlIH0gZnJvbSAnLi9uZ3gtbG9hZGluZy5zZXJ2aWNlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmd4TG9hZGluZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBwcml2YXRlIExvYWRpbmdTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvclJlZjtcclxuICAgIHNob3c6IGJvb2xlYW47XHJcbiAgICBjb25maWc6IElOZ3hMb2FkaW5nQ29uZmlnO1xyXG4gICAgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgICBwcml2YXRlIGRlZmF1bHRDb25maWc7XHJcbiAgICBuZ3hMb2FkaW5nQW5pbWF0aW9uVHlwZXM6IHtcclxuICAgICAgICBjaGFzaW5nRG90czogc3RyaW5nO1xyXG4gICAgICAgIGNpcmNsZTogc3RyaW5nO1xyXG4gICAgICAgIGNpcmNsZVN3aXNoOiBzdHJpbmc7XHJcbiAgICAgICAgY3ViZUdyaWQ6IHN0cmluZztcclxuICAgICAgICBkb3VibGVCb3VuY2U6IHN0cmluZztcclxuICAgICAgICBub25lOiBzdHJpbmc7XHJcbiAgICAgICAgcHVsc2U6IHN0cmluZztcclxuICAgICAgICByZWN0YW5nbGVCb3VuY2U6IHN0cmluZztcclxuICAgICAgICByb3RhdGluZ1BsYW5lOiBzdHJpbmc7XHJcbiAgICAgICAgdGhyZWVCb3VuY2U6IHN0cmluZztcclxuICAgICAgICB3YW5kZXJpbmdDdWJlczogc3RyaW5nO1xyXG4gICAgfTtcclxuICAgIGNvbnN0cnVjdG9yKExvYWRpbmdTZXJ2aWNlOiBOZ3hMb2FkaW5nU2VydmljZSwgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBwcml2YXRlIHNldHVwQ29uZmlnO1xyXG4gICAgc2V0U2hvdyhzaG93OiBib29sZWFuKTogdm9pZDtcclxufVxyXG4iXX0=